Codec : UTF-8 Unicode text
Language : Chinese Simplified
We are looking forward to your help to translate this article into english

字符编码 : UTF-8 Unicode text
换行符 : LF
语言 : Chinese Simplified

SubServer
1、GameServer（以下简称GS）和GameFileServer（以下简称GFS）统称SubServer，以区别于MainServer。
2、SubServer应包含的数据成员：（这里仅是计划，实际以代码为准。include/ssubserver.h）
struct SSubServer{
	JID m_serverid;
	QString m_name;
	QHostAddress m_address;//地址
	quint16 m_port;//主端口
	enum EType{ET_GameServer,ET_GameFileServer} m_type;
	struct SGameVersion : public SGameName{
		JVersion m_version;
	};
	union {
		SGameInfo m_gameinfo;
		QList<SGameVersion> m_games;
	};
};
3、通信协议
	SubServer端：
		发送LoginHash。
		发送SSubServer。
	MainServer端：
		发送Command。
			hello返回相关信息。kill直接结束。restart重启，将丢失全部未保存的数据。
4、调用层次
	MainServer端：
		JSubServerConnection
			--JSubServerSrv
5、JSubServerSrv
	添加SubServer
	返回Game各级别相关信息。
6、如何避免误传信息
	SubServer A可能由于错误上传了游戏B的信息，这会造成全局的混乱。
7、数据结构
	GameInfo：
	1、MC <=> MS
		1.1、gamelist
			gameid;
			gamename;
		1.2、gameinfo
			gameid;
			gamename;
			author;
			introduction;
			version;
			以上皆为最新信息。
		1.3、serverlist
			gameid
			map<version , pair<gs_id,gfs_id> >
			在此才能得到全部的version
	2、MS <=> GS
		要求GS的runner对gameId有写权限，否则提示错误。
		2.1、同1.2
			这部分信息可以由GS上传（将发生更新）或继续使用数据库中的数据。
		2.2、serverinfo
			gameId;
			servertype;
			version;
			将自身（GS）与gameId、version、servertype绑定。
	3、MS <=> GFS
		同2
		3.1、同2.2
	4、MC <=> GFS
		4.1、download
			gameId;
			version;
			platform;
	SubServerInfo:
	1、MC <=> MS
		1.1、serverinfo
			serverId;
			name;
			type;
			address;
			port;
		1.2、gamelist
			serverId;
			map< gameId , set<version> >;
	2、MS <=> GS
		2.1、同1.1
		2.2、gamelist
			从2.1中获得当前serverId
			map<gameId , set<version> >;
	3、MS <=> GFS
		3.1、同2.1
		3.2、同2.2
	4、MC <=> GFS
		无

8、JSubServerSrv
	JCode addSubServer(const SSubServer& server);
		首先，检查server是否是由runner控制的。
			server.m_serverId runner
		然后，检查基本信息是否匹配。
			m_serverId m_name m_type
		最后，将其加入servers中。
	JCode updateGameInfo(const SGameInfo2& gi);
		首先，检查runner是否对gi有写权限。
			gi.m_gameId runner
		然后，查检基本信息是否匹配。
			m_gameId m_name m_author
		最后，将其加入games中。
	JCode addRelation(JID serverId,JID gameId,const JVersion& gameVersion);
		首先，检查serverId是否是由runner控制的。
			serverId runner
		然后，检查runner是否对gameId有写权限。
			runner gameId
		最后，将其加入relation中。
9、Database
	1、JSubServerDb
		bool isControlAble(JID serverId,JID runnerId);
		bool checkBaseInfo(const SSubServer&);
	2、JGameInfoDb
		bool isWritable(JID gameId,JID runnerId);
		bool checkBaseInfo(const SGameInfo&);
10、Sample：
		gameId : 109
		name : sample game
		designer : 901
		writable : 902
	SampleGS
		serverId : 53379
		name : sample game server
		runnerId : 902
11、SubServer启动所需信息
	SHost
		address
		port
	Login
		name
		passwd
		role
	SGameInfo2
		gameId
		name
		author
		version
		introduction
	SSubServer
		serverId
		name
		address
		port


JDMD studio , Dalian University of Technology , China
E-mail : elephant_liu@mail.dlut.edu.cn
